services:
  db:
    image: postgres:17
    container_name: app-postgres
    ports:
      - "${POSTGRES_PORT?not set}:5432"
    env_file:
      - .env
    volumes:
      - app-postgres-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?not set}
      - POSTGRES_USER=${POSTGRES_USER?not set}
      - POSTGRES_DB=${POSTGRES_DB?not set}
      - POSTGRES_SERVER=${POSTGRES_SERVER?not set}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      timeout: 10s

  backend:
    container_name: app-backend
    ports:
      - 8000:8000
    env_file:
      - .env
    environment:
      - ENVIRONMENT=${ENVIRONMENT?not set}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY?not set}
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/health-check" ]
      interval: 10s
      retries: 5
      timeout: 10s

volumes:
  app-postgres-data:
    name: app-postgres-data